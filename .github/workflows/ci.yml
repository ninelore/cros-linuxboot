name: CI
on:
  workflow_dispatch:
  workflow_call:
  pull_request:
  push:
    branches: [main]
    paths:
      - "**/*.nix"
      - "**/*.sh"
      - "**/*_defconfig"
      - "flake.lock"

jobs:
  nix-checks:
    name: Nix Flake Checks
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v3
      - uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            extra-platforms = aarch64-linux
      - uses: actions/checkout@v5
      - name: Run nix flake check
        run: nix flake check --all-systems
  build-kernel-mtk:
    name: Build MediaTek kernel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: DeterminateSystems/nix-installer-action@v20
      - uses: cachix/cachix-action@v16
        with:
          name: 9lore
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - run: nix build -L .#fit-mtk
  build-images-mtk:
    name: Build ${{ matrix.board }}
    needs: build-kernel-mtk
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board:
          # MT8183
          - krane
          - juniper
          # MT8186
          - steelix
          - tentacruel
          # MT8192
          - hayato
          # MT8195
          - tomato
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v16
        with:
          name: 9lore
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - run: nix build -L '.#coreboot-${{ matrix.board }}'
      - name: Get atrifact name
        run: echo "FILENAME=$(nix eval --raw .#coreboot-${{ matrix.board }}.name).rom" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FILENAME }}
          path: result/${{ env.FILENAME }}
          include-hidden-files: true
